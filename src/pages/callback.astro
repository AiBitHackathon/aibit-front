---
import Layout from '../layouts/Layout.astro';
---

<Layout title="Authorizing...">
  <div class="flex items-center justify-center min-h-screen">
    <div class="text-center">
      <div class="animate-spin rounded-full h-8 w-8 border-b-2 border-[#00B0B9] mx-auto mb-4"></div>
      <p class="text-gray-600">Completing Fitbit authorization...</p>
      <p id="debug" class="text-xs text-gray-400 mt-2"></p>
    </div>
  </div>
</Layout>

<script>
  const API_URL = import.meta.env.PUBLIC_API_URL.replace(/\/$/, '');
  const debug = document.getElementById('debug');
  const debugLog = (msg) => {
    console.log(msg);
    if (debug) debug.textContent = msg;
  };

  // Get Fitbit auth code and state
  const urlParams = new URLSearchParams(window.location.search);
  const code = urlParams.get('code');
  const state = urlParams.get('state');
  const storedState = sessionStorage.getItem('oauth_state');

  // Get stored wallet address
  const walletAddress = sessionStorage.getItem('wallet_address');
  debugLog(`Processing Fitbit auth for wallet: ${walletAddress?.substring(0, 8)}...`);

  if (!code || !state || state !== storedState) {
    debugLog('Invalid state or missing code');
    sessionStorage.removeItem('oauth_state');
    window.location.replace('/dashboard?error=Invalid authorization');
  } else {
    fetch(`${API_URL}/api/token-exchange`, {
      method: 'POST',
      headers: {
        'Content-Type': 'application/json',
        'X-Wallet-Address': walletAddress || ''
      },
      body: JSON.stringify({
        code,
        grant_type: 'authorization_code',
        redirect_uri: window.location.origin + '/callback'
      })
    })
    .then(async response => {
      const responseText = await response.text();
      debugLog(`Token exchange response: ${response.status} - ${responseText}`);
      
      if (!response.ok) {
        throw new Error(`Token exchange failed: ${responseText}`);
      }
      
      return JSON.parse(responseText);
    })
    .then(data => {
      if (!data.access_token) {
        debugLog('No access token in response');
        throw new Error('No access token received');
      }
      
      debugLog('Storing Fitbit tokens...');
      localStorage.setItem('fitbit_tokens', JSON.stringify({
        access_token: data.access_token,
        refresh_token: data.refresh_token,
        expires_at: Date.now() + (data.expires_in * 1000),
        wallet_address: walletAddress
      }));

      sessionStorage.removeItem('oauth_state');
      debugLog('Success! Redirecting to dashboard...');
      
      window.location.replace('/dashboard');
    })
    .catch(error => {
      console.error('Error:', error);
      debugLog(`Error: ${error.message}`);
      sessionStorage.removeItem('oauth_state');
      window.location.replace(`/dashboard?error=${encodeURIComponent(error.message)}`);
    });
  }
</script>